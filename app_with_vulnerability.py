# app_with_vulnerability.py

from flask import Flask
from flask_sqlalchemy import SQLAlchemy  # Introduce a vulnerability with a known security issue

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your-secret-key'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///vulnerable_db.db'

db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(50), nullable=False)

# This function contains a security vulnerability (insecure password hashing for demonstration purposes)
def insecure_hash_password(password):
    return password.encode('utf-8').hex()

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)
